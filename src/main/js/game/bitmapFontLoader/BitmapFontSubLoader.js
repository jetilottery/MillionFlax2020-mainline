define([	"com/pixijs/pixi",	"skbJet/component/resourceLoader/Util",	"skbJet/component/resourceLoader/AbstractSubLoader",	"skbJet/component/resourceLoader/resourceLib"], function(PIXI, Util, AbstractSubLoader, resLib){	/**	 * @module BitmapFontSubLoader	 * @description sub loader module for Bitmap font files	 * @author Bob Moir	 */		if(!resLib.bitmapFonts) {		resLib.bitmapFonts = {};	}	function BitmapFontSubLoader(options){		this._initOptions("bitmapFonts", options ? options : {});	}	BitmapFontSubLoader.prototype = new AbstractSubLoader();	BitmapFontSubLoader.prototype._load = BitmapFontSubLoader.prototype.load;	/**	 * @function load	 * @description load files, override and wrapper abstract sub loader load.	 * @instance	 * @param fileMap {string} - the file map to be loaded, key is file URL, value is parent URL	 * @param options {map} - Options	 * @param options.queryStr {string} - Optional, query string which will be appended to the end of URL	 * @param options.onFileLoaded {function} - call back when file loaded	 * @param options.onLoadFailed {function} - call back when file load failed	 */	BitmapFontSubLoader.prototype.load = function(fileMap, options){		this.loader = new PIXI.loaders.Loader();		this.loader.defaultQueryString = options.queryStr;		options.queryStr = null;		this._load(fileMap, options);		var This = this;		this.loader.on("load", function(loader, resource){			if(resource.extension === "xml") {				resLib.bitmapFonts[resource.name] = resource;			}			This._count.current++;			This.options.onFileLoaded();		});		this.loader.once("complete", function(){			This._count.complete = true;			//Register fonts before handing off to the callback			for(var name in resLib.bitmapFonts) {				if(resLib.bitmapFonts.hasOwnProperty(name)) {					PIXI.extras.BitmapText.registerFont(						resLib.bitmapFonts[name].data,						PIXI.Texture.fromFrame(resLib.bitmapFonts[name].children[0].name)					);				}			}			This.options.onFileLoaded();		});		this.loader.on("error", this.options.onLoadFailed);		this.loader.load();	};	BitmapFontSubLoader.prototype._doLoadFile = function(url/*, success, fail*/){		if(Util.getFileExt(url) === "xml") {			var name = Util.getFileNameWithoutExt(url);			this.loader.add(name, url);		}	};	return BitmapFontSubLoader;});//0123456789AÁÅÄÆBCČDĎEÉĚFGHIÍJKLMNŇÑOÓÖØPQRŘSŠTŤUÚŮÜVWXYÝZŽ