define(require => {    const msgBus = require("skbJet/component/gameMsgBus/GameMsgBus");	const config = require("skbJet/componentManchester/standardIW/gameConfig");	const SKBeInstant = require("skbJet/component/SKBeInstant/SKBeInstant");	const scenarioData = require("skbJet/componentManchester/standardIW/scenarioData");	const scenarioTransform = require("game/scenarioTransform");	const _state = {		scenarioString: "",		//scenarioString		mainGame: [],			//main game reveal state		bonusGame: []			//bonus game reveal state    };	let _resolve;	let _error = false;	let _dataLoaded = new Promise(resolve => _resolve = resolve);	function loadRevealData(data) {		let parsedData;		if(data && data.revealData !== "" && data.revealData !== null && data.revealData !== undefined && data.revealData !== "null") {			if (SKBeInstant.isSKB()) {				parsedData = data.wagerData;			} else if (data.wagerData.replace) {				parsedData = JSON.parse(data.wagerData.replace(/\\/g, "").replace(/#/g, "\""));			}			_state.scenarioString = (parsedData.scenarioString !== undefined) ? parsedData.scenarioString : "";			_state.mainGame = (parsedData.mainGame !== undefined) ? parsedData.mainGame : [];			_state.bonusGame = (parsedData.bonusGame !== undefined) ? parsedData.bonusGame : [];		}		_resolve();	}	function saveRevealData() {		if(SKBeInstant.config.wagerType !== "TRY" && config.revealDataSaveEnabled && !_error) {			if(scenarioData.scenario && scenarioData.scenario.length) {				_state.scenarioString = scenarioTransform.stringify(scenarioData.scenario); //Acts as a checksum in case a user somehow retained GIP data from a finished ticket			}			let rdsStr = JSON.stringify(_state);			if(SKBeInstant.isSKB()) {				msgBus.publish("jLotteryGame.revealDataSave", {					revealDataSave: JSON.parse(rdsStr) //Just convert back so we copy the current object instead of using the one in use				});			} else {				//Here's a fun piece of trivia. If you stringify a string with escaped backslashes, it re-escapes the backslash and the quote, so '\"' becomes '\\\\\\\"'.				//JLottery.js stringifies this string.				msgBus.publish("jLotteryGame.revealDataSave", {					revealDataSave: rdsStr.replace(/\"/g, '#')				});			}		}	}    function reset() {		_state.scenario = "";		_state.mainGame = [];		_state.bonusGame = [];	}	function error() {		_error = true;	}		msgBus.subscribe("Game.started", (data) => {		_state.scenarioString = data;		saveRevealData();	});	msgBus.subscribe("Game.mainGameTile", (data) => {		_state.mainGame.push(data);		saveRevealData();	});	msgBus.subscribe("Game.bonusGameTile", (data) => {		_state.bonusGame.push(data);		saveRevealData();	});	msgBus.subscribe('jLottery.startUserInteraction', loadRevealData);	msgBus.subscribe('jLottery.reStartUserInteraction', loadRevealData);	return {        get mainGame() {			return JSON.parse(JSON.stringify(_state.mainGame));		},		get bonusGame() {			return JSON.parse(JSON.stringify(_state.bonusGame));		},		get scenarioString() {			return _state.scenarioString;		},		get dataLoaded() {			return _dataLoaded;		},		get inGame() {			return _state.scenarioString !== "";		},		error,		reset    };});